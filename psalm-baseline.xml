<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="3.9.4@352bd3f5c5789db04e4010856c2f4e01ed354f4e">
  <file src="src/Doctrine/EntityDef.php">
    <MissingClosureReturnType occurrences="4">
      <code>function () use ($defaultFieldValue) {</code>
      <code>function () {</code>
      <code>function () use ($def) {</code>
      <code>function () use ($f) {</code>
    </MissingClosureReturnType>
    <MissingParamType occurrences="4">
      <code>$name</code>
      <code>$type</code>
      <code>$def</code>
      <code>$f</code>
    </MissingParamType>
    <MissingPropertyType occurrences="4">
      <code>$name</code>
      <code>$entityType</code>
      <code>$fieldDefs</code>
      <code>$config</code>
    </MissingPropertyType>
    <MissingReturnType occurrences="5">
      <code>readFieldDefs</code>
      <code>defaultDefsFromMetadata</code>
      <code>getFieldDefs</code>
      <code>normalizeFieldDef</code>
      <code>ensureInvokable</code>
    </MissingReturnType>
    <MixedArgument occurrences="2">
      <code>$type</code>
      <code>$f</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion occurrences="2">
      <code>$key</code>
      <code>$key</code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment occurrences="2">
      <code>$def</code>
      <code>$defaultFieldValue</code>
    </MixedAssignment>
    <MixedFunctionCall occurrences="1">
      <code>call_user_func_array($f, func_get_args())</code>
    </MixedFunctionCall>
    <MixedInferredReturnType occurrences="3">
      <code>string</code>
      <code>string</code>
      <code>array</code>
    </MixedInferredReturnType>
    <MixedOperand occurrences="1">
      <code>$this-&gt;entityType</code>
    </MixedOperand>
    <MixedReturnStatement occurrences="3">
      <code>$this-&gt;name</code>
      <code>$this-&gt;entityType</code>
      <code>$this-&gt;config</code>
    </MixedReturnStatement>
  </file>
  <file src="src/Doctrine/FieldDef.php">
    <MissingClosureReturnType occurrences="3">
      <code>function () use (&amp;$n, $funcOrString) {</code>
      <code>function (FixtureFactory $factory) use ($name) {</code>
      <code>function (FixtureFactory $factory) use ($name, $numberOfInstances) {</code>
    </MissingClosureReturnType>
    <MixedArgument occurrences="1">
      <code>$n</code>
    </MixedArgument>
    <MixedOperand occurrences="4">
      <code>$n</code>
      <code>$n</code>
      <code>$n</code>
      <code>$n</code>
    </MixedOperand>
  </file>
  <file src="src/Doctrine/FixtureFactory.php">
    <DocblockTypeContradiction occurrences="1">
      <code>isset($metadata)</code>
    </DocblockTypeContradiction>
    <MissingParamType occurrences="17">
      <code>$name</code>
      <code>$name</code>
      <code>$numberOfInstances</code>
      <code>$ent</code>
      <code>$fieldName</code>
      <code>$fieldValue</code>
      <code>$array</code>
      <code>$enabled</code>
      <code>$name</code>
      <code>$name</code>
      <code>$entity</code>
      <code>$name</code>
      <code>$name</code>
      <code>$entityBeingCreated</code>
      <code>$metadata</code>
      <code>$fieldName</code>
      <code>$value</code>
    </MissingParamType>
    <MissingReturnType occurrences="10">
      <code>get</code>
      <code>getList</code>
      <code>checkFieldOverrides</code>
      <code>setField</code>
      <code>createCollectionFrom</code>
      <code>persistOnGet</code>
      <code>getAsSingleton</code>
      <code>setSingleton</code>
      <code>unsetSingleton</code>
      <code>updateCollectionSideOfAssocation</code>
    </MissingReturnType>
    <MixedArgument occurrences="15">
      <code>$name</code>
      <code>$name</code>
      <code>$fieldName</code>
      <code>$name</code>
      <code>$def-&gt;getFieldDefs()</code>
      <code>$fieldName</code>
      <code>$ent</code>
      <code>$fieldName</code>
      <code>$ent</code>
      <code>$fieldName</code>
      <code>$fieldName</code>
      <code>$type</code>
      <code>$value</code>
      <code>$value</code>
      <code>$inverse</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="1">
      <code>$assoc['inversedBy']</code>
    </MixedArrayAccess>
    <MixedArrayOffset occurrences="11">
      <code>$this-&gt;singletons[$name]</code>
      <code>$this-&gt;singletons[$name]</code>
      <code>$fieldOverrides[$fieldName]</code>
      <code>$fieldValues[$fieldName]</code>
      <code>$this-&gt;singletons[$name]</code>
      <code>$this-&gt;singletons[$name]</code>
      <code>$this-&gt;singletons[$name]</code>
      <code>$this-&gt;singletons[$name]</code>
      <code>$this-&gt;singletons[$name]</code>
      <code>$this-&gt;entityDefs[$name]</code>
      <code>$this-&gt;entityDefs[$name]</code>
    </MixedArrayOffset>
    <MixedAssignment occurrences="9">
      <code>$fieldDef</code>
      <code>$fieldValues[$fieldName]</code>
      <code>$fieldValue</code>
      <code>$instances[]</code>
      <code>$this-&gt;persist</code>
      <code>$type</code>
      <code>$assoc</code>
      <code>$inverse</code>
      <code>$collection</code>
    </MixedAssignment>
    <MixedFunctionCall occurrences="2">
      <code>$fieldDef($this)</code>
      <code>$config['afterCreate']($ent, $fieldValues)</code>
    </MixedFunctionCall>
    <MixedMethodCall occurrences="1">
      <code>getAssociationMapping</code>
    </MixedMethodCall>
  </file>
  <file src="test/Doctrine/Fixtures/BasicUsageTest.php">
    <MissingReturnType occurrences="12">
      <code>acceptsConstantValuesInEntityDefinitions</code>
      <code>acceptsGeneratorFunctionsInEntityDefinitions</code>
      <code>valuesCanBeOverriddenAtCreationTime</code>
      <code>preservesDefaultValuesOfEntity</code>
      <code>doesNotCallTheConstructorOfTheEntity</code>
      <code>instantiatesCollectionAssociationsToBeEmptyCollectionsWhenUnspecified</code>
      <code>arrayElementsAreMappedToCollectionAsscociationFields</code>
      <code>unspecifiedFieldsAreLeftNull</code>
      <code>entityIsDefinedToDefaultNamespace</code>
      <code>entityCanBeDefinedToAnotherNamespace</code>
      <code>returnsListOfEntities</code>
      <code>canSpecifyNumberOfReturnedInstances</code>
    </MissingReturnType>
    <MixedArgument occurrences="2">
      <code>$fixtureFactory-&gt;getList(Entity\SpaceShip::class)</code>
      <code>$fixtureFactory-&gt;getList(Entity\SpaceShip::class, [], 5)</code>
    </MixedArgument>
    <MixedAssignment occurrences="8">
      <code>$ss</code>
      <code>$ss</code>
      <code>$ss</code>
      <code>$ss</code>
      <code>$ss</code>
      <code>$p1</code>
      <code>$p2</code>
      <code>$ship</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="14">
      <code>getName</code>
      <code>getName</code>
      <code>getName</code>
      <code>getName</code>
      <code>getName</code>
      <code>constructorWasCalled</code>
      <code>getCrew</code>
      <code>getCrew</code>
      <code>getCrew</code>
      <code>getCrew</code>
      <code>contains</code>
      <code>getCrew</code>
      <code>contains</code>
      <code>getName</code>
    </MixedMethodCall>
  </file>
  <file src="test/Doctrine/Fixtures/BidirectionalReferencesTest.php">
    <MissingReturnType occurrences="3">
      <code>bidirectionalOntToManyReferencesAreAssignedBothWays</code>
      <code>unidirectionalReferencesWorkAsUsual</code>
      <code>whenTheOneSideIsASingletonItMayGetSeveralChildObjects</code>
    </MissingReturnType>
    <MixedAssignment occurrences="5">
      <code>$person</code>
      <code>$ship</code>
      <code>$ship</code>
      <code>$p1</code>
      <code>$p2</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="5">
      <code>getSpaceShip</code>
      <code>getCrew</code>
      <code>getOwner</code>
      <code>getCrew</code>
      <code>getCrew</code>
    </MixedMethodCall>
  </file>
  <file src="test/Doctrine/Fixtures/ExtraConfigurationTest.php">
    <MissingReturnType occurrences="2">
      <code>canInvokeACallbackAfterObjectConstruction</code>
      <code>theAfterCreateCallbackCanBeUsedToCallTheConstructor</code>
    </MissingReturnType>
    <MixedAssignment occurrences="2">
      <code>$ss</code>
      <code>$ss</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="3">
      <code>getName</code>
      <code>constructorWasCalled</code>
      <code>getName</code>
    </MixedMethodCall>
    <MixedOperand occurrences="3">
      <code>$ss-&gt;getName()</code>
      <code>$fieldValues['name']</code>
      <code>$fieldValues['name']</code>
    </MixedOperand>
  </file>
  <file src="test/Doctrine/Fixtures/IncorrectUsageTest.php">
    <MissingReturnType occurrences="6">
      <code>throwsWhenTryingToDefineTheSameEntityTwice</code>
      <code>throwsWhenTryingToDefineEntitiesThatAreNotEvenClasses</code>
      <code>throwsWhenTryingToDefineEntitiesThatAreNotEntities</code>
      <code>throwsWhenTryingToDefineNonexistentFields</code>
      <code>throwsWhenTryingToGiveNonexistentFieldsWhileConstructing</code>
      <code>throwsWhenTryingToGetLessThanOneInstance</code>
    </MissingReturnType>
  </file>
  <file src="test/Doctrine/Fixtures/PersistingTest.php">
    <MissingReturnType occurrences="3">
      <code>automaticPersistCanBeTurnedOn</code>
      <code>doesNotPersistByDefault</code>
      <code>doesNotPersistEmbeddableWhenAutomaticPersistingIsTurnedOn</code>
    </MissingReturnType>
    <MixedAssignment occurrences="2">
      <code>$ss</code>
      <code>$ss</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="3">
      <code>getId</code>
      <code>getId</code>
      <code>getId</code>
    </MixedMethodCall>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>assertInstanceOf</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="test/Doctrine/Fixtures/ReferenceTest.php">
    <MissingReturnType occurrences="2">
      <code>referencedObjectShouldBeCreatedAutomatically</code>
      <code>referencedObjectsShouldBeNullable</code>
    </MissingReturnType>
    <MixedAssignment occurrences="3">
      <code>$ss1</code>
      <code>$ss2</code>
      <code>$person</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="3">
      <code>getSpaceShip</code>
      <code>getSpaceShip</code>
      <code>getSpaceShip</code>
    </MixedMethodCall>
  </file>
  <file src="test/Doctrine/Fixtures/ReferencesTest.php">
    <DocblockTypeContradiction occurrences="1">
      <code>assertEmpty</code>
    </DocblockTypeContradiction>
    <MissingReturnType occurrences="4">
      <code>referencedObjectsShouldBeCreatedAutomatically</code>
      <code>referencedObjectsShouldBeOverrideable</code>
      <code>referencedObjectsShouldBeNullable</code>
      <code>referencedObjectsCanBeSingletons</code>
    </MissingReturnType>
  </file>
  <file src="test/Doctrine/Fixtures/SequenceTest.php">
    <MissingClosureParamType occurrences="1">
      <code>$n</code>
    </MissingClosureParamType>
    <MissingReturnType occurrences="3">
      <code>sequenceGeneratorCallsAFunctionWithAnIncrementingArgument</code>
      <code>sequenceGeneratorCanTakeAPlaceholderString</code>
      <code>sequenceGeneratorCanTakeAStringToAppendTo</code>
    </MissingReturnType>
    <MixedMethodCall occurrences="12">
      <code>getName</code>
      <code>getName</code>
      <code>getName</code>
      <code>getName</code>
      <code>getName</code>
      <code>getName</code>
      <code>getName</code>
      <code>getName</code>
      <code>getName</code>
      <code>getName</code>
      <code>getName</code>
      <code>getName</code>
    </MixedMethodCall>
  </file>
  <file src="test/Doctrine/Fixtures/SingletonTest.php">
    <MissingReturnType occurrences="6">
      <code>afterGettingAnEntityAsASingletonGettingTheEntityAgainReturnsTheSameObject</code>
      <code>getAsSingletonMethodAcceptsFieldOverridesLikeGet</code>
      <code>throwsAnErrorWhenCallingGetSingletonTwiceOnTheSameEntity</code>
      <code>allowsSettingSingletons</code>
      <code>allowsUnsettingSingletons</code>
      <code>allowsOverwritingExistingSingletons</code>
    </MissingReturnType>
    <MixedAssignment occurrences="2">
      <code>$ss</code>
      <code>$ss</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="2">
      <code>getName</code>
      <code>getName</code>
    </MixedMethodCall>
  </file>
  <file src="test/Doctrine/Fixtures/TransitiveReferencesTest.php">
    <MissingReturnType occurrences="2">
      <code>referencesGetInstantiatedTransitively</code>
      <code>transitiveReferencesWorkWithSingletons</code>
    </MissingReturnType>
    <MixedAssignment occurrences="3">
      <code>$badge</code>
      <code>$badge1</code>
      <code>$badge2</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="8">
      <code>getOwner</code>
      <code>getSpaceShip</code>
      <code>getOwner</code>
      <code>getOwner</code>
      <code>getOwner</code>
      <code>getSpaceShip</code>
      <code>getOwner</code>
      <code>getSpaceShip</code>
    </MixedMethodCall>
  </file>
  <file src="test/Doctrine/TestDb.php">
    <InvalidArgument occurrences="2">
      <code>$annotationPath</code>
      <code>$config-&gt;newDefaultAnnotationDriver($annotationPath)</code>
    </InvalidArgument>
  </file>
  <file src="test/Fixture/Entity/Badge.php">
    <MissingParamType occurrences="1">
      <code>$label</code>
    </MissingParamType>
    <MissingReturnType occurrences="3">
      <code>getId</code>
      <code>getLabel</code>
      <code>getOwner</code>
    </MissingReturnType>
  </file>
  <file src="test/Fixture/Entity/Commander.php">
    <PropertyNotSetInConstructor occurrences="1">
      <code>$id</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="test/Fixture/Entity/Person.php">
    <MissingParamType occurrences="1">
      <code>$name</code>
    </MissingParamType>
    <MissingReturnType occurrences="3">
      <code>getId</code>
      <code>getName</code>
      <code>getSpaceShip</code>
    </MissingReturnType>
  </file>
  <file src="test/Fixture/Entity/SpaceShip.php">
    <MissingParamType occurrences="2">
      <code>$name</code>
      <code>$name</code>
    </MissingParamType>
    <MissingReturnType occurrences="4">
      <code>getId</code>
      <code>getName</code>
      <code>getCrew</code>
      <code>constructorWasCalled</code>
    </MissingReturnType>
  </file>
  <file src="test/Fixture/Entity/SpaceStation.php">
    <MissingParamType occurrences="2">
      <code>$name</code>
      <code>$name</code>
    </MissingParamType>
    <MissingReturnType occurrences="2">
      <code>getId</code>
      <code>getName</code>
    </MissingReturnType>
  </file>
  <file src="test/Unit/Definition/DefinitionsTest.php">
    <MixedAssignment occurrences="1">
      <code>$definitions</code>
    </MixedAssignment>
  </file>
</files>
