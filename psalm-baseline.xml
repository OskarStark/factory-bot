<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="3.10.1@eeed5ecccc10131397f0eb7ee6da810c0be3a7fc">
  <file src="src/EntityDefinition.php">
    <DocblockTypeContradiction occurrences="1">
      <code>return !$fieldDefinition instanceof FieldDefinition\Resolvable;</code>
    </DocblockTypeContradiction>
    <MissingPropertyType occurrences="3">
      <code>$classMetadata</code>
      <code>$fieldDefinitions</code>
      <code>$afterCreate</code>
    </MissingPropertyType>
    <MixedInferredReturnType occurrences="3">
      <code>ORM\Mapping\ClassMetadata</code>
      <code>array&lt;string, FieldDefinition\Resolvable&gt;</code>
      <code>\Closure</code>
    </MixedInferredReturnType>
    <MixedReturnStatement occurrences="3">
      <code>$this-&gt;classMetadata</code>
      <code>$this-&gt;fieldDefinitions</code>
      <code>$this-&gt;afterCreate</code>
    </MixedReturnStatement>
  </file>
  <file src="src/FieldDefinition.php">
    <MissingClosureReturnType occurrences="2">
      <code>static function () use (&amp;$n, $funcOrString) {</code>
      <code>static function () use ($value) {</code>
    </MissingClosureReturnType>
    <MissingParamType occurrences="1">
      <code>$value</code>
    </MissingParamType>
    <MissingReturnType occurrences="1">
      <code>resolve</code>
    </MissingReturnType>
    <MixedArgument occurrences="1">
      <code>$n</code>
    </MixedArgument>
    <MixedOperand occurrences="4">
      <code>$n</code>
      <code>$n</code>
      <code>$n</code>
      <code>$n</code>
    </MixedOperand>
  </file>
  <file src="src/FieldDefinition/References.php">
    <MissingPropertyType occurrences="2">
      <code>$className</code>
      <code>$count</code>
    </MissingPropertyType>
    <MixedArgument occurrences="2">
      <code>$this-&gt;className</code>
      <code>$this-&gt;count</code>
    </MixedArgument>
  </file>
  <file src="src/FieldDefinition/Resolvable.php">
    <MissingReturnType occurrences="1">
      <code>resolve</code>
    </MissingReturnType>
  </file>
  <file src="src/FixtureFactory.php">
    <MissingClosureReturnType occurrences="1">
      <code>static function () use ($fieldDefinition) {</code>
    </MissingClosureReturnType>
    <MissingParamType occurrences="3">
      <code>$fieldValue</code>
      <code>$array</code>
      <code>$fieldValue</code>
    </MissingParamType>
    <MixedArgument occurrences="3">
      <code>$fieldValue</code>
      <code>$fieldValue</code>
      <code>$inversedBy</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion occurrences="1">
      <code>$fieldOverrides</code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment occurrences="6">
      <code>$defaultFieldValue</code>
      <code>$fieldValues[$fieldName]</code>
      <code>$fieldValues[$fieldName]</code>
      <code>$fieldValue</code>
      <code>$inversedBy</code>
      <code>$collection</code>
    </MixedAssignment>
  </file>
  <file src="test/Fixture/FixtureFactory/Entity/Organization.php">
    <PropertyNotSetInConstructor occurrences="1">
      <code>$id</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="test/Fixture/FixtureFactory/Entity/Project.php">
    <PropertyNotSetInConstructor occurrences="1">
      <code>$id</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="test/Fixture/FixtureFactory/Entity/Repository.php">
    <PropertyNotSetInConstructor occurrences="1">
      <code>$id</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="test/Fixture/FixtureFactory/Entity/User.php">
    <PropertyNotSetInConstructor occurrences="2">
      <code>$id</code>
      <code>$organizations</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="test/Integration/FixtureFactoryTest.php">
    <InternalMethod occurrences="1">
      <code>addToAssertionCount</code>
    </InternalMethod>
  </file>
  <file src="test/Unit/EntityDefinitionTest.php">
    <MissingClosureParamType occurrences="2">
      <code>$entity</code>
      <code>$entity</code>
    </MissingClosureParamType>
    <MixedArgumentTypeCoercion occurrences="1">
      <code>$fieldDefinitions</code>
    </MixedArgumentTypeCoercion>
    <MixedInferredReturnType occurrences="1">
      <code>\Generator</code>
    </MixedInferredReturnType>
  </file>
  <file src="test/Unit/FieldDefinitionTest.php">
    <MixedAssignment occurrences="1">
      <code>$resolved</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="3">
      <code>string</code>
      <code>string</code>
      <code>\Generator</code>
    </MixedInferredReturnType>
    <MixedReturnStatement occurrences="2"/>
    <RedundantCondition occurrences="2">
      <code>assertIsArray</code>
      <code>assertIsArray</code>
    </RedundantCondition>
  </file>
  <file src="test/Unit/FixtureFactoryTest.php">
    <ArgumentTypeCoercion occurrences="1">
      <code>$className</code>
    </ArgumentTypeCoercion>
    <MixedArgument occurrences="2">
      <code>$name</code>
      <code>$fieldValues['name']</code>
    </MixedArgument>
    <PossiblyNullArgument occurrences="1">
      <code>$organization-&gt;name()</code>
    </PossiblyNullArgument>
    <RedundantCondition occurrences="4">
      <code>assertNotNull</code>
      <code>assertNotNull</code>
      <code>assertInstanceOf</code>
      <code>assertInstanceOf</code>
    </RedundantCondition>
    <RedundantConditionGivenDocblockType occurrences="2">
      <code>assertInstanceOf</code>
      <code>assertInstanceOf</code>
    </RedundantConditionGivenDocblockType>
  </file>
</files>
